#!/bin/sh
# generate EFI unified kernel image
# input: kernel version, e.g. 6.7.3_1
VERSION="$2"
DISK="/dev/nvme0n1"
PART=1
EFI="/boot"
UKI="linux-${VERSION}.efi"
KERNEL="${EFI}/vmlinuz-${VERSION}"
CMDLINE="loglevel=4 init_on_free=1"
efistub="/usr/lib/systemd/boot/efi/linuxx64.efi.stub"
set -e
[ -f "${efistub}" ] || exit 0
[ -f "${KERNEL}" ]] || exit 0
[ -x /usr/bin/iucode_tool ] || exit 0
[ -x /usr/bin/tinyramfs ] || exit 0
[ -x /usr/bin/sbctl ] || exit 0
[ -x /usr/bin/llvm-objcopy ]] || exit 0
tmpdir=$(mktemp -d)
trap 'rm -rf "$tmpdir"' EXIT INT
printf '%s\n' "${CMDLINE}" > ${tmpdir}/cmdline
/usr/bin/iucode_tool -S --write-earlyfw=${tmpdir}/ucode /usr/lib/firmware/intel-ucode/*
/usr/bin/tinyramfs -f -k ${VERSION} ${tmpdir}/initram
cat ${tmpdir}/ucode ${tmpdir}/initram > ${tmpdir}/unified-initram
llvm-objcopy \
	--add-section .osrel="/etc/os-release" \
	--set-section-flags .osrel=data,readonly \
	--add-section .cmdline="${tmpdir}/cmdline" \
	--set-section-flags .cmdline=data,readonly \
	--add-section .initrd="${tmpdir}/unified-initram" \
	--set-section-flags .initrd=code,readonly \
	--add-section .linux="${KERNEL}" \
	--set-section-flags .linux=code,readonly \
	"${efistub}" "${EFI}/${UKI}"
sbctl sign -s "${EFI}/${UKI}"
efibootmgr \
	--create \
	--disk "${DISK}"  \
	--part "${PART}" \
	--label "Void Linux (uki) with kernel ${VERSION}" \
	--loader "/${UKI}"
df -h ${EFI} 
